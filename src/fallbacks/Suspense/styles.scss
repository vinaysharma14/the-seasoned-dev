$translationBreakpoints: (1024 768 600);
$responsiveTranslation: (-200 -100 0 100 200, -100 -50 0 50 100, -50 -25 0 25 50, -40 -20 0 20 40);

$responsiveHeading: (1024 3, 768 2.5, 600 2, 450 1.5, 350 1.25, 280 1);

@mixin translation {
  @for $i from 1 through length(nth($responsiveTranslation, 1)) {
    &:nth-child(#{$i}) {
      transform: translateX(#{nth(nth($responsiveTranslation, 1), $i)}px);

      @for $j from 1 through length($translationBreakpoints) {
        @media (max-width: #{nth($translationBreakpoints, $j )}px) {
          transform: translateX(#{nth(nth($responsiveTranslation, $j + 1), $i)}px);
        }
      }
    }
  }
}

.container {
  height: 100vh;
  display: flex;
  overflow: hidden;
  align-items: center;
  justify-content: center;
  background-color: var(--background);

  h1 {
    font-size: 4em;
    @include translation();
    transition: transform 2s 0.25s cubic-bezier(0.3, 1, 0.3, 1);

    @each $heading in $responsiveHeading {
      @media (max-width: #{nth($heading, 1)}px) {
        font-size: #{nth($heading, 2)}em;
      }
    }
  }

  .animate {
    transform: translateX(0px) !important;
  }
}
